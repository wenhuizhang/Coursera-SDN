'''
Coursera:
- Software Defined Networking (SDN) course
-- Programming Assignment 2

Professor: Nick Feamster
Teaching Assistant: Arpit Gupta, Muhammad Shahbaz
'''


from mininet.topo import Topo
from mininet.net import Mininet
from mininet.util import irange, dumpNodeConnections
from mininet.log import setLoglevel

class LinearTopo(Topo):
    "Simple Data Center Topology"
		
    "linkopts - (1:core, 2:aggregation, 3: edge) parameters"
    "fanout - number of child switch per parent switch"
    def __init__(self, k=2,  **opts):
        # Initialize topology and default options
        super(LinearTopo, self).__init__(**opts)
        
        # Add your logic here ...
	self.k = k 

	lastSwitch = None
	for i in irange(1, k):
		host = self.addHost('h%s' %i)
		switch = self.addSwitch('s%s' %i)
        	self.addLink(host, switch)
		if lastSwitch:
			self.addLink(switch, lastSwitch)
		lastSwitch = switch 

 
def simpleTest():
	topo = LinearTopo(k=4)
	net = Mininet(topo)
	net.start()
	print "Dumping host connections"
	dumpNodeConnections(net.hosts)
	print "Testing network connectivity"
	net.pingAll()
	net.stop()

if __name__ == '__main__':
	setLogLevel('info')
	simpleTest()
#topos = { 'custom': ( lambda: CustomTopo() ) }
